# Importing Required Libraries
import yfinance as yf
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Reading the Excel File
df1 = pd.read_excel(r"C:\Users\hkoli\Downloads\stock_tata_tcs.xlsx")

# Checking the Shape of the DataFrame
print(df1.shape)

# Checking Data Types of Each Column
print(df1.dtypes)


# Are there any missing values in the dataset?
df1.isnull().sum()

# Do we have any duplicate dates, and how do we handle them?
df1.duplicated().sum()

# 3. saw dataypes and change according to data
df1["Date"]=pd.to_datetime(df1["Date"])

# What is the average closing price of TCS stock?
avg_closing=df1["Close"].mean()
print(f"average of closing: {avg_closing:.2f}")

#What is the highest and lowest closing price recorded?
highest=df1["Close"].max()
print(f"Highest Closing : {highest}")

lowest=df1["Close"].min()
print(f"lowest closing : {lowest}")

# On which date did the highest stock closing occur monthly?
monthly=df1["Date"].dt.to_period("M")
g=df1.groupby(monthly)["Close"].max().sort_values(ascending=False)

# What is the average daily price change (High - Low)?
avg_daily=df1["High"]-df1["Low"].mean()
print(f"average daily change : {avg_daily.head()}")

# The total number of shares traded on monthly (Volume).
total_volumn=df1["Volume"].sum()
total_volumn
group=df1.groupby(monthly)["Volume"].sum().sort_values(ascending=False)


# What is the correlation between opening and closing prices?
corr=df1["Open"].corr(df1["Close"])
print(f"correlation : {corr}")

# What is the most volatile trading day (highest difference between High & Low)?
df1["volatile"]=df1["High"]-df1["Low"] #Volatility refers to how much a stock's price fluctuates in a given period
gro=df1.groupby("Date")["volatile"].sum()

Visualization-Based Questions

# Can we plot a line chart showing stock price trends over time?
plt.figure(figsize=(10,6))
sns.lineplot(df1,x="Date",y='Low',label=("Low"))
plt.plot(df1["Date"],df1["High"],label=("High"))
plt.legend()
plt.xticks(rotation=90)
plt.grid()

# Can we visualize a candlestick chart for TCS stock?
import pandas as pd
import plotly.graph_objects as go


df1["Date"] = pd.to_datetime(df1["Date"])


fig = go.Figure(data=[go.Candlestick(
    x=df1["Date"],
    open=df1["Open"],
    high=df1["High"],
    low=df1["Low"],
    close=df1["Close"],
    name="TCS Stock"
)])

fig.update_layout(
    title="TCS Stock Candlestick Chart",
    xaxis_title="Date",
    yaxis_title="Stock Price (₹)",
    xaxis_rangeslider_visible=False,  
    template="plotly_dark",  
    width=1000, height=600
)
fig.show()

# How does the 7-day and 30-day moving average trend compare to the actual closing price?
df1["7-day"]=df1["Close"].rolling(window=7).mean()
df1["30-day"]=df1["Close"].rolling(window=30).mean()
plt.plot(df1["Date"],df1["Close"],label="Closing")
plt.plot(df1["Date"],df1["7-day"],label="7-day moving avg",linestyle="--")
plt.plot(df1["Date"],df1["30-day"],label="30-day moving avg",linestyle="--")
plt.legend()
plt.xlabel("Date")                # X-axis label
plt.ylabel("Stock Price (₹)")      # Y-axis label
plt.title("TCS Stock: Closing Price vs. Moving Averages")  # Chart title
plt.show()

# Can we plot a histogram of trading volume to see distribution?
sns.histplot(df1["Volume"],kde=True)
plt.xlabel("Trading Volume")
plt.ylabel("Frequency")
plt.title("Distribution of Trading Volume")
plt.show()

# How does stock volatility (High - Low) change over time?
plt.figure(figsize=(10,5))
sns.lineplot(data=df1, x="Date", y="volatile", color="red", label="Volatility")
plt.xlabel("Date")
plt.ylabel("Price Difference (High - Low)")
plt.title("Stock Volatility Over Time")
plt.xticks(rotation=90)
plt.legend()
plt.show()
